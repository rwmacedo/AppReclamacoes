// <auto-generated />
using System;
using AppReclamacoes.Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AppReclamacoes.Infra.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240923092730_CreateHeroku")]
    partial class CreateHeroku
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AppReclamacoes.Domain.Entities.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("NomeProduto")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("Produtos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            NomeProduto = "Conta Depósito"
                        },
                        new
                        {
                            Id = 2,
                            NomeProduto = "Câmbio"
                        },
                        new
                        {
                            Id = 3,
                            NomeProduto = "Habitação"
                        },
                        new
                        {
                            Id = 4,
                            NomeProduto = "Penhor"
                        },
                        new
                        {
                            Id = 5,
                            NomeProduto = "Ações Online"
                        },
                        new
                        {
                            Id = 6,
                            NomeProduto = "Seguro"
                        },
                        new
                        {
                            Id = 7,
                            NomeProduto = "Cartão de Crédito"
                        },
                        new
                        {
                            Id = 8,
                            NomeProduto = "Fundos de Investimento"
                        },
                        new
                        {
                            Id = 9,
                            NomeProduto = "Consignado"
                        });
                });

            modelBuilder.Entity("AppReclamacoes.Domain.Entities.Reclamacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CpfCnpj")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("DataOcorrencia")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataReclamacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("character varying(400)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("IdadeOuTempoConstituicao")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("integer");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TipoPessoa")
                        .HasColumnType("integer");

                    b.Property<decimal>("Valor")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("ProdutoId");

                    b.ToTable("Reclamacoes");
                });

            modelBuilder.Entity("AppReclamacoes.Domain.Entities.Reclamacao", b =>
                {
                    b.HasOne("AppReclamacoes.Domain.Entities.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Produto");
                });
#pragma warning restore 612, 618
        }
    }
}
